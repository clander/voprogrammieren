<h1 id="vo-programmieren">VO Programmieren</h1>
<h2 id="anforderungen-an-die-lv">Anforderungen an die LV</h2>
<p>Die folgenden Auszüge stammen aus dem <a
href="https://ph-tirol.ac.at/sites/default/files/mitteilungsblatt/02_HLG_Digitale_Grundbildung.pdf">Curriculum</a>.</p>
<h3 id="inhalte-modul-3">Inhalte Modul 3</h3>
<p>Im Hochschullehrgang erwerben die Studierenden Kompetenzen und Wissen
in Bezug auf mediendidaktische, individuelle und gesellschaftliche
Aspekte, Programmierung, Computer- Systeme und Anwendungen. Dabei
erarbeiten sie sich Kompetenzen zu den drei zentralen Perspektiven des
Frankfurt Dreiecks (technisch-medial, gesellschaftlich-kulturell und
interaktionsbezogen) und kombinieren diese mit den nötigen Grundlagen
der Medienbildung und Informatik.</p>
<p>Zudem bauen die Studierenden Wissensinhalte und Kompetenzen in Bezug
auf wesentliche Themenbereiche des Unterrichts der Digitalen
Grundbildung (DigiKomp Kategorien) auf. Sie thematisieren die
fachdidaktische Umsetzung dieser Kenntnisse und Fähigkeiten, üben diese
ein und bereiten sich auf den Unterricht vor.</p>
<p>Absolvent*innen sind nach Abschluss des Hochschullehrgangs Digitale
Grundbildung u.a. in der Lage … grundlegende Kenntnisse, Methoden und
Fähigkeiten zu entwickeln, die für die Vermittlung von
Programmierkompetenzen und das Erarbeiten von Informatischem Denken
benötigt werden …</p>
<h3 id="ziele-modul-3">Ziele Modul 3</h3>
<p>Ziel dieses Moduls ist es, grundlegende Kenntnisse, Methoden und
Fähigkeiten zu entwickeln, die für die Vermittlung von
Programmierkompetenzen und das Erarbeiten von informatischem Denken
benötigt werden. Dabei sollen insbesondere Kompetenzen vermittelt
werden, welche das Arbeiten an Projekten in Teams unterstützen und
welche die Relevanz von Programmiersprachen und Werkzeugen im
schulischen Kontext beurteilen helfen.</p>
<p>Bildungsinhalte:</p>
<ul>
<li>informatisches Denken und Informatische Arbeitsprinzipien (etwa
Entwurfsprinzipien, strukturierte Programmierung, abstrakte Datentypen,
Modularisierung, Hierarchisierung, Prototyping, Debugging)</li>
<li>blockorientierte und textbasierte Programmiersprachen</li>
<li>Programmierkonzepte (Variablen, Schleifen, Verzweigungen,
Ereignisse, Prozeduren, Funktionen)</li>
<li>kognitive Entwicklungsstufen beim Erlernen von Programmieren</li>
<li>Entwicklungsumgebungen im schulischen Kontext und deren
Unterrichtsrelevanz</li>
<li>Entwicklungsprozesse (insbesondere agile Projekte)</li>
<li>Roboter, Ein-Platinen-Rechner und andere elektronischen Materialien
des informatischen Denkens</li>
</ul>
<p>Die Absolvent<em>innen des Moduls sind in der Lage, … </em>
Teilbereiche des Informatischen Denkens benennen und Bezüge zur
Lebenswelt von Schüler<em>innen herzustellen. </em> informatische
Arbeitsprinzipien zu erklären und damit Probleme zu analysieren,
Problemlösungen unter Benutzung geeigneter Methoden zu beschreiben und
diese zu realisieren. * unterschiedliche Programmiersprachen-Paradigma
und Darstellungsformen sowie deren Vor- und Nachteile im Schulunterricht
zu benennen. * gängige Entwicklungsumgebungen zu nennen, und wissen über
deren Vor- und Nachteile Bescheid. * unterschiedliche
Programmierkonzepte in einer blockorientierten bzw. textorientierten
Programmiersprache anzuwenden und zu reflektieren. * Programmiersprachen
in kreativer Art und Weise zur Verwirklichung von Projekten zu nutzen. *
kognitive Entwicklungsstufen (zum Beispiel: pre-tracing, tracing,
post-tracing) beim Erlernen von Programmierfähigkeiten im Unterricht zu
berücksichtigen. * klassische und agile Entwicklungsmethoden zu nennen
und diese im Schulunterricht mit den Schüler<em>innen in Projekten
umzusetzen. </em> ein im Kontext der Modulinhalte zu verortendes,
didaktisch und fachdidaktisch begründetes Projekt mit Robotern,
Ein-Platinen-Rechner oder anderen elektronischen Materialien des
informatischen Denkens, zu planen, umzusetzen und die erstellten
Unterrichtsszenarien kritisch zu reflektieren.</p>
<h2 id="betroffene-lehrplanteile">Betroffene Lehrplanteile</h2>
<p>RIS:
https://www.ris.bka.gv.at/Dokumente/BgblAuth/BGBLA_2022_II_267/BGBLA_2022_II_267.html</p>
<h3 id="klasse">1. Klasse</h3>
<h4 id="kompetenzbereich-produktion">Kompetenzbereich Produktion:</h4>
<p>Inhalte digital erstellen und veröffentlichen, Algorithmen entwerfen
und Programmieren</p>
<p>Die Schülerinnen und Schüler können - <strong>(T) eindeutige
Handlungsanleitungen (Algorithmen) nachvollziehen, ausführen sowie
selbstständig formulieren.</strong> - (G) verschiedene
Darstellungsformen von Inhalten und die Wirkung auf sich und andere
beschreiben. - (I) mit Daten einfache Berechnungen durchführen sowie in
verschiedenen (visuellen) Formaten sammeln und präsentieren. - (I)
einzeln und gemeinsam Texte und Präsentationen (unter Einbeziehung von
Bildern, Grafiken und anderen Objekten) strukturieren und
formatieren.</p>
<h4 id="anwendungsbereiche">Anwendungsbereiche</h4>
<ul>
<li><strong>Sequenzen und einfache Schleifen</strong></li>
<li>Planung, Gestaltung und Auswertung von Umfragen</li>
</ul>
<h3 id="klasse-1">2. Klasse</h3>
<h4 id="kompetenzbereich-produktion-1">Kompetenzbereich Produktion:</h4>
<p>Inhalte digital erstellen und veröffentlichen, Algorithmen entwerfen
und Programmieren</p>
<p>Die Schülerinnen und Schüler können - <strong>(T) darstellen, wie
Programme Daten speichern und verarbeiten, indem sie Zahlen oder andere
Symbole zur Darstellung von Informationen verwenden.</strong> -
<strong>(T) unter Nutzung einer geeigneten Entwicklungsumgebung einfache
Programme erstellen, diese testen und debuggen (Fehler erkennen und
beheben).</strong> - (G) die Rechte am geistigen Eigentum beachten und
bei der Erstellung oder beim Remixen von Programmen die entsprechenden
Urheberrechte angeben. - (I) visuelle/audiovisuelle/auditive Inhalte
erzeugen, adaptieren und analysieren. Sie können Möglichkeiten der
Veröffentlichung benennen.</p>
<h3 id="klasse-2">3. Klasse</h3>
<h4 id="kompetenzbereich-produktion-2">Kompetenzbereich Produktion:</h4>
<p>Inhalte digital erstellen und veröffentlichen, Algorithmen entwerfen
und Programmieren</p>
<p>Die Schülerinnen und Schüler können - <strong>(T) an Beispielen
Elemente des Computational Thinkings nachvollziehen und diese zur Lösung
von Problemen einsetzen. Sie wissen, wie sie Lösungswege in
Programmiersprache umsetzen können.</strong> - (G) verschiedene populäre
Medienkulturen benennen sowie Möglichkeiten verschiedener
Darstellungsformen von Inhalten erproben. - (I) ihre eigenen medialen
Produktionen auf Barrierefreiheit überprüfen und ggf. Barrieren
beseitigen. - (I) Einstellungen in Softwareapplikationen den
persönlichen Bedürfnissen entsprechend anpassen.</p>
<h4 id="anwendungsbereiche-1">Anwendungsbereiche</h4>
<ul>
<li>Gezielte bzw. manipulative Darstellungen, zB in Diagrammen, durch
Bildausschnitte oder Vertonung</li>
<li>Konfigurationsmöglichkeiten von Betriebssystemen und
Kommunikationssystemen, um sie barrierefrei zugänglich machen</li>
</ul>
<h3 id="klasse-3">4. Klasse</h3>
<h4 id="kompetenzbereich-produktion-3">Kompetenzbereich Produktion</h4>
<p>Inhalte digital erstellen und veröffentlichen, Algorithmen entwerfen
und Programmieren</p>
<p>Die Schülerinnen und Schüler können - <strong>(T) Programme entwerfen
und iterativ entwickeln, die Kontrollstrukturen kombinieren,
einschließlich verschachtelter Schleifen und zusammengesetzter
Konditionale.</strong> - (G) Möglichkeiten verschiedener
Darstellungsformen von Inhalten erproben und deren Einfluss auf die
Wahrnehmung des Inhalts hinterfragen. - (I) mit bereitgestellten Medien
und Software-Applikationen zielgerichtet und kreativ gestaltend
kooperieren. - (I) einfache Programme oder Webanwendungen mit geeigneten
Werkzeugen erstellen, um ein bestimmtes Problem zu lösen oder eine
bestimmte Aufgabe zu erfüllen.</p>
<h4 id="anwendungsbereiche-2">Anwendungsbereiche</h4>
<ul>
<li><strong>Dokumentation von Programmen</strong></li>
<li><strong>Projektplanung inklusive Aufgabenverteilung und Zeitplan
(Graphische) Notationen, Pseudocode</strong></li>
<li>Ästhetische und technische Kompetenzen von Medienkulturen in
Projekten</li>
</ul>
